extern malloc
extern printf

section .data
    printf_fmt_int:         db "%d ", 0
    printf_fmt_newline:     db 10, 0
    printf_fmt_int_newline: db "%d", 10, 0
    n:                      dd 5
    arr:                    dd 11, 22, 33, 44, 55

section .text
global main

extern malloc
print_arr:
    push ebp
    mov ebp, esp

    ; TODO a
    mov eax, [ebp + 8]
    xor ecx, ecx
.loop1:
    mov ebx, [eax + 4 * ecx]
    pusha
    push ebx
    push printf_fmt_int
    call printf
    add esp, 8
    popa
    inc ecx
    cmp ecx, [ebp + 12]
    jb print_arr.loop1

    push printf_fmt_newline
    call printf
    add esp, 4

    leave
    ret

compute:
    push ebp
    mov ebp, esp

    ; TODO b
    mov eax, [ebp + 8]
    mov ebx, 9
    imul ebx
    add eax, 10

    leave
    ret

new_array:
    push ebp
    mov ebp, esp

    ; TODO c
    mov eax, [ebp + 8]
    mov ebx, 4 ; sizeof int
    imul ebx   ; eax is 4 * n
    push eax
    call malloc
    add esp, 4
    xor ecx, ecx
.loop1:
    push eax
    push ecx
    call compute
    add esp, 4
    mov edx, eax
    pop eax
    mov [eax + 4 * ecx], edx
    inc ecx
    cmp ecx, [ebp + 8]
    jb new_array.loop1

    leave
    ret

main:
    push ebp
    mov ebp, esp


    ; TODO a
    ; call print_arr
    push dword [n]
    push arr
    call print_arr
    add esp, 8

    push printf_fmt_newline
    call printf
    add esp, 4

    ; OUTPUT:
    ; 11 22 33 44 55

    ; TODO b
    push dword[n]
    call compute
    add esp, 4

    push eax
    push printf_fmt_int_newline
    call printf
    add esp, 8

    push 100
    call compute
    add esp, 4

    push eax
    push printf_fmt_int_newline
    call printf
    add esp, 8

    ; OUTPUT:
    ; 55
    ; 910

    ; TODO c
    ; call new_array(11)
    ; call print_arr

    push dword 11
    call new_array
    add esp, 4

    push dword 11
    push eax
    call print_arr
    add esp, 8

    push printf_fmt_newline
    call printf
    add esp, 4

    ; OUTPUT:
    ; 10 19 28 37 46 55 64 73 82 91 100


    xor eax, eax
    leave
    ret